openapi: 3.0.1
info:
  title: Science Fair System
  description: Documentation of the Science Fair Endpoints
  version: 0.0.1

tags:
  - name: student
    description: Students endpoints

paths:
  /student:
    post:
      tags:
        - student
      summary: Create a new student
      operationId: createStudent
      requestBody:
        description: Student info to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'

  /student/{studentRegistration}:
    get:
      tags:
        - student
      summary: Get a Student
      operationId: getStudent
      parameters:
        - name: studentRegistration
          in: path
          description: Student registration
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: Student not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundResponse'
    delete:
      tags:
        - student
      summary: Delete a Student
      operationId: deleteStudent
      parameters:
        - name: studentRegistration
          in: path
          description: Student registration
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: Student not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundResponse'
    patch:
      tags:
        - student
      summary: Update a Student
      operationId: updateStudent
      parameters:
        - name: studentRegistration
          in: path
          description: Student registration
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Student info to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '404':
          description: Student not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundResponse'

  /student/all:
    get:
      tags:
        - student
      summary: Get all Student
      operationId: getAllStudents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'

  /student/all/active:
    get:
      tags:
        - student
      summary: Get all active Student
      operationId: getAllActiveStudents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'

components:
  schemas:
    CreateUserRequest:
      type: object
      required:
        - name
        - registration
        - email
      properties:
        name:
          type: string
          example: Ricardo Randolfo dos Santos
        registration:
          type: integer
          format: int64
          example: 123456
        email:
          type: string
          example: ricardo@email.com

    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
          example: Ricardo Randolfo dos Santos
        email:
          type: string
          example: ricardo@email.com

    UserResponse:
      type: object
      properties:
        registration:
          type: integer
          format: int64
          example: 123456
        name:
          type: string
          example: Ricardo Randolfo dos Santos
        email:
          type: string
          example: ricardo@email.com
        active:
          type: boolean
          example: true
        userType:
          type: string
          example: STUDENT

    BadRequestResponse:
      type: object
      properties:
        propertyName:
          type: string
          description: Error message
          example: can't be empty

    ResourceNotFoundResponse:
      type: object
      properties:
        timestamp:
          type: string
          description: Error timestamp
          example: 17-Feb-2023 04:07:04
        message:
          type: string
          description: Error message
          example: User not found